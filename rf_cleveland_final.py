# -*- coding: utf-8 -*-
"""RF_Cleveland_Final

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zKzaz1uAalKbQ7yUri_Q5XssIMN8VhZt
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import accuracy_score,classification_report
from sklearn.metrics import classification_report

df = pd.read_excel('/content/drive/MyDrive/Final Project/Final Project/Dataset/Cleveland Dataset (1).xlsx')

df['num']=df['num'].map({0:0,1:1,2:1,3:1,4:1})
df

df.shape
df=  df.dropna(inplace=False)

df

# splitting into input and output datasets
X= df.iloc[:,:-1] # all columns except the last one
y=df.iloc[:,-1]# just the last column
X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.33, random_state=42)

print(X,y)

classifier= RandomForestClassifier(criterion="gini",max_depth=8,min_samples_split=20,random_state=5)
parameter={'criterion':['gini', 'entropy', 'log_loss'],'max_depth':[9,10,11,12,13,14,15],'min_samples_split':[5,10,15,20]}
classifier_regressor=GridSearchCV(classifier,param_grid=parameter,scoring='accuracy',cv=5)
classifier_regressor.fit(X_train,y_train)

print(classifier_regressor.best_params_)

y_pred= classifier_regressor.predict(X_test)

score= accuracy_score(y_pred,y_test)
print(score)

print(classification_report(y_pred,y_test))